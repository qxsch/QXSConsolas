%YAML 1.2
---
# Config  for my application
# --------------------------
#myapp:
#  foo: bar
#  bar: [1, 2]
SplunkInventory:
  datasource: 'sqlite:////tmp/db.sqlite'
SplunkNodes:
  envs:
    PROD:
      singlesearchheads:
        role: SNG
        servers:
          localhost:
            hostname: "localhost"
            path: "/opt/shd-apps"
      searchheads:
        role: SHD
        servers:
          localhost:
            hostname: "localhost"
            path: "/opt/shd-apps"
            target: "https://test:test@localhost:8089/"
      indexers:
        role: IDX
        servers:
          localhost:
            hostname: "localhost"
            path: "/opt/idx-apps"
      deployments:
        role: UFM
        servers:
          localhost:
            hostname: "localhost"
            path: "/opt/dpl-apps"
SplunkDeployment:
  envs:
    PROD:
      searchheads:
        role: SHD
        servers:
          localhost:
            hostname: "localhost"
            path: "/opt/shd-apps"
            target: "https://test:test@localhost:8089/"
            exclude:
              - "local"
        #prelocal:
        #  - [ "echo", "hi shd pre", "$trigger", "$appdir" ]
        #preremote:
        #  - [ "echo", "hi shd pre", "$trigger", "$appdir" ]
        #postlocal:
        #  - [ "echo", "hi shd post", "$trigger", "$appdir" ]
        #postremote:
        #  - [ "echo", "hi shd post", "$trigger", "$appdir" ]
      indexers:
        role: IDX
        servers:
          localhost:
            hostname: "localhost"
            path: "/opt/idx-apps"
            target: "https://test:test@localhost:8089/"
      deployments:
        role: UFM
        servers:
          localhost:
            hostname: "localhost"
            path: "/opt/dpl-apps"
            target: "https://test:test@localhost:8089/"
  apps:
    default:
      directory: /opt/apps/

routes:
  version: 1
  list:
    header: |
      _________                      ___________.__            __   
      \_   ___ \  ____ ______ ___.__.\__    ___/|  |__ _____ _/  |_ 
      /    \  \/ /  _ \\____ <   |  |  |    |   |  |  \\__  \\   __\
      \     \___(  <_> )  |_> >___  |  |    |   |   Y  \/ __ \|  |  
       \______  /\____/|   __// ____|  |____|   |___|  (____  /__|  
              \/       |__|   \/                     \/     \/      
    description: |
      CopyThat deploys to the following Splunk roles:
        * Search-Head Clusters
        * Indexer Clusters
        * Universal Forwarder Managment Servers.
      You can configure the whole logging framework as well as pre- and post-deployment scripts.
    footer: Powered by QXS Consolas
  cliapps:
    DumpConfig:
      func: CTSplunk.DumpConfig
      description: Dump the whole configuration
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    DeployApp:
      func: CTSplunk.Deploy.DeployApp
      description: Deploy an app to splunk
      showCliName: False
      showCliDescription: False
      logger: deploy.app
      data:
        WarnDeploymentTime: 20
        Inventory:
          Active: True
          Prompt: Required
    CreateApp:
      func: CTSplunk.Deploy.CreateApp
      description: Create an new app on splunk
      showCliName: False
      showCliDescription: False
      logger: deploy.app
      data:
        WarnDeploymentTime: 20
        Inventory:
          Active: True
          Prompt: All
    RemoveApp:
      func: CTSplunk.Deploy.RemoveApp
      description: Remove an app from splunk
      showCliName: False
      showCliDescription: False
      logger: deploy.app
      data:
        WarnDeploymentTime: 20
        Inventory:
          Active: True
    BackupApp:
      func: CTSplunk.Deploy.BackupApp
      description: Backup an app from splunk
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    RestoreApp:
      func: CTSplunk.Deploy.RestoreApp
      description: Restore an app to splunk
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    CopyApp:
      func: CTSplunk.Deploy.CrossCopyApp
      description: Cross Copy an app from a splunk environment to another
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    SearchInvIndex:
      func: CTSplunk.Inventory.SearchIndex
      description: Search the Indexes Inventory
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    CreateInvIndex:
      func: CTSplunk.Inventory.CreateIndex
      description: Creates an Index in the Indexes Inventory
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    UpdateInvIndex:
      func: CTSplunk.Inventory.UpdateIndex
      description: Updates an Index in the Indexes Inventory
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    DeleteInvIndex:
      func: CTSplunk.Inventory.DeleteIndex
      description: Deletes an Index from the Indexes Inventory
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    SearchInvApp:
      func: CTSplunk.Inventory.SearchApp
      description: Search the Apps Inventory
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    CreateInvApp:
      func: CTSplunk.Inventory.CreateApp
      description: Creates an App in the Apps Inventory
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    UpdateInvApp:
      func: CTSplunk.Inventory.UpdateApp
      description: Updates an App in the Apps Inventory
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    DeleteInvApp:
      func: CTSplunk.Inventory.DeleteApp
      description: Deletes an App from the Apps Inventory
      showCliName: False
      showCliDescription: False
      logger: deploy.app
    Test:
      func: CTSplunk.Test.Test
      description: My little test
      #showCliName: True
      #showCliDescription: True
      showCliName: False
      showCliDescription: False
      logger: myapp.cli
      data:
        - this
        - is
        - some
        - data

# Config for logging
# ------------------
# See http://docs.python.org/2.7/library/logging.config.html#configuration-dictionary-schema
logging:
  version: 1
  disable_existing_loggers: true

  # Configuring the default (root) logger is highly recommended
  root:
    level: !!python/name:logging.NOTSET
    handlers: [console]

  loggers:
    deploy.app:
      level: !!python/name:logging.NOTSET
      handlers: [console, logfile, splunklogfile]
      qualname: deploy.app
      propagate: false

  handlers:
    logfile:
      class: logging.FileHandler
      filename: sample.log
      formatter: simpleFormatter
      level: !!python/name:logging.NOTSET
    splunklogfile:
      class: logging.FileHandler
      filename: splunksample.log
      formatter: splunkFormatter
      level: !!python/name:logging.NOTSET
    console:
      class: logging.StreamHandler
      stream: ext://sys.stdout
      formatter: consoleFormatter
      level: !!python/name:logging.INFO
    fullConsole:
      class: logging.StreamHandler
      stream: ext://sys.stdout
      formatter: fullConsoleFormatter
      level: !!python/name:logging.NOTSET

  formatters:
    splunkFormatter:
      #class: !!python/name:logging.Formatter
      '()': QXSConsolas.SimpleFormatter
      format: '%(asctime)s app=%(name)s severity=%(levelname)s message=%(message)s'
      datefmt: '%Y-%m-%d %H:%M:%S'
    simpleFormatter:
      '()': QXSConsolas.SimpleFormatter
      format: '[%(name)-15s][%(asctime)s][%(levelname)-8s] %(message)s'
      datefmt: '%Y-%m-%d %H:%M:%S'
      exceptionfmt: "Traceback (most recent call last):\n%(traceback)s\n%(classname)s: %(message)s"
    consoleFormatter:
      '()': QXSConsolas.ColoredFormatter
      format: '[$color_level%(levelname)-8s$color_reset] $color_level%(message)s$color_reset'
      datefmt: '%Y-%m-%d %H:%M:%S'
      exceptionfmt: "Traceback (most recent call last):\n$color_fg_magenta%(traceback)s$color_reset\n$color_fg_yellow%(classname)s$color_reset: $color_reset$color_fg_red%(message)s$color_reset"
    fullConsoleFormatter:
      '()': QXSConsolas.ColoredFormatter
      format: '[%(name)-15s][$color_fg_magenta%(asctime)s$color_reset][$color_level%(levelname)-8s$color_reset] $color_level%(message)s$color_reset'
      datefmt: '%Y-%m-%d %H:%M:%S'
      exceptionfmt: "Traceback (most recent call last):\n$color_fg_magenta%(traceback)s$color_reset\n$color_fg_yellow%(classname)s$color_reset: $color_reset$color_fg_red%(message)s$color_reset"



