%YAML 1.2
---
# Config  for my application
# --------------------------
#myapp:
#  foo: bar
#  bar: [1, 2]

routes:
  version: 1
  list:
    header: |
      _________                      ___________.__            __   
      \_   ___ \  ____ ______ ___.__.\__    ___/|  |__ _____ _/  |_ 
      /    \  \/ /  _ \\____ <   |  |  |    |   |  |  \\__  \\   __\
      \     \___(  <_> )  |_> >___  |  |    |   |   Y  \/ __ \|  |  
       \______  /\____/|   __// ____|  |____|   |___|  (____  /__|  
              \/       |__|   \/                     \/     \/      
    description: |
      This is an advanced git deployment tool.
      It does so many wonderful things. Wow. Amazing.
    footer: Powered by QXS Consolas
  cliapps:
    Test:
      func: CopyThat.Test.Test
      description: My little test

# Config for logging
# ------------------
# See http://docs.python.org/2.7/library/logging.config.html#configuration-dictionary-schema
logging:
  version: 1
  disable_existing_loggers: true

  # Configuring the default (root) logger is highly recommended
  root:
    level: !!python/name:logging.NOTSET
    handlers: [console]

  loggers:
    myapp.cli:
      #level: !!python/name:logging.WARN
      level: !!python/name:logging.INFO
      handlers: [console, logfile, splunklogfile]
      qualname: myapp.cli
      propagate: false

  handlers:
    logfile:
      class: logging.FileHandler
      filename: sample.log
      formatter: simpleFormatter
      level: !!python/name:logging.NOTSET
    splunklogfile:
      class: logging.FileHandler
      filename: splunksample.log
      formatter: splunkFormatter
      level: !!python/name:logging.NOTSET
    console:
      class: logging.StreamHandler
      stream: ext://sys.stdout
      formatter: consoleFormatter
      level: !!python/name:logging.NOTSET

  formatters:
    splunkFormatter:
      class: !!python/name:logging.Formatter
      format: '%(asctime)s app=%(name)s severity=%(levelname)s message=%(message)s'
      datefmt: '%Y-%m-%d %H:%M:%S'
    simpleFormatter:
      class: !!python/name:logging.Formatter
      format: '[%(name)-15s][%(asctime)s][%(levelname)-8s] %(message)s'
      datefmt: '%Y-%m-%d %H:%M:%S'
    consoleFormatter:
      '()': QXSConsolas.ColoredFormatter
      format: '[$color_fg_blue%(name)-15s$color_reset][$color_fg_magenta%(asctime)s$color_reset][$color_level%(levelname)-8s$color_reset] $color_level%(message)s$color_reset'
      datefmt: '%Y-%m-%d %H:%M:%S'
      exceptionfmt: "Traceback (most recent call last):\n$color_fg_magenta%(traceback)s$color_reset\n$color_fg_yellow%(classname)s$color_reset: $color_reset$color_fg_red%(message)s$color_reset"


